{
  "swagger": "2.0",
  "info": {
    "title": "restaurant.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/restaurant/{id}/items": {
      "get": {
        "summary": "Gets a Restaurant ID and returns all of it's items",
        "operationId": "Restaurants_GetRestaurantAllItems",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protosItemList"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Restaurants"
        ]
      },
      "post": {
        "summary": "Gets an Item(JSON) and adds it to Restaurant of given ID in the db",
        "operationId": "Restaurants_PostRestaurantItems",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protosPostRes"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protosItem"
            }
          }
        ],
        "tags": [
          "Restaurants"
        ]
      },
      "put": {
        "summary": "Gets an Item(JSON) and updates it to Restaurant of given ID in the db",
        "operationId": "Restaurants_PutRestaurantItems2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protosPostRes"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protosItem"
            }
          }
        ],
        "tags": [
          "Restaurants"
        ]
      }
    },
    "/v1/restaurant/{id}/items/{item.id}": {
      "delete": {
        "summary": "Deletes Item of given Item ID and Restaurant ID from db",
        "operationId": "Restaurants_DeleteRestaurantItems",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protosPostRes"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "item.id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "item.amount",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "float"
          },
          {
            "name": "item.discount",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "float"
          },
          {
            "name": "item.cuisine",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Restaurants"
        ]
      },
      "put": {
        "summary": "Gets an Item(JSON) and updates it to Restaurant of given ID in the db",
        "operationId": "Restaurants_PutRestaurantItems",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protosPostRes"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "item.id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protosItem"
            }
          }
        ],
        "tags": [
          "Restaurants"
        ]
      }
    },
    "/v1/restaurant/{id}/items/{item_id}": {
      "get": {
        "summary": "Gets Restaurant ID and Item ID and returns respective item",
        "operationId": "Restaurants_GetRestaurantItem",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protosItem"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "min",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "max",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Restaurants"
        ]
      }
    },
    "/v1/restaurant/{id}/items/{min}": {
      "get": {
        "summary": "Gets a min and max amount range and returns the list of items of given Restaurant ID that belong to this range",
        "operationId": "Restaurants_GetRestaurantRangeItems",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protosItemList"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "min",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "item_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "max",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Restaurants"
        ]
      }
    },
    "/v1/restaurants": {
      "post": {
        "summary": "Gets a Restaurant and adds it to the db",
        "operationId": "Restaurants_PostRestaurant",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protosPostRes"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protosRestaurant"
            }
          }
        ],
        "tags": [
          "Restaurants"
        ]
      }
    },
    "/v1/restaurants/top/{id}": {
      "get": {
        "summary": "Get the top performing restaurants by order count",
        "operationId": "Restaurants_TopRestaurants",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protosRestaurantList"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Restaurants"
        ]
      }
    },
    "/v1/restaurants/worst/{id}": {
      "get": {
        "summary": "Get the worst performing restaurants by order count",
        "operationId": "Restaurants_WorstRestaurants",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protosRestaurantList"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Restaurants"
        ]
      }
    },
    "/v1/restaurants/{id}": {
      "get": {
        "summary": "Get a restaurant given its ID",
        "operationId": "Restaurants_GetRestaurant",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protosRestaurant"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Restaurants"
        ]
      }
    },
    "/v1/restaurants/{name}": {
      "get": {
        "summary": "Get all Restaurants of a given name",
        "operationId": "Restaurants_GetRestaurantName",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protosRestaurantList"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Restaurants"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "protosItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "amount": {
          "type": "number",
          "format": "float"
        },
        "discount": {
          "type": "number",
          "format": "float"
        },
        "cuisine": {
          "type": "string"
        }
      },
      "title": "Item"
    },
    "protosItemList": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protosItem"
          }
        }
      },
      "title": "Slice of Items"
    },
    "protosPostRes": {
      "type": "object",
      "properties": {
        "response": {
          "type": "string"
        }
      },
      "title": "Response for POST"
    },
    "protosRestaurant": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "state": {
          "type": "string"
        }
      },
      "title": "Restaurant"
    },
    "protosRestaurantList": {
      "type": "object",
      "properties": {
        "restaurants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protosRestaurant"
          }
        }
      },
      "title": "List of Restaurants"
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
