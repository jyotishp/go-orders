{
  "swagger": "2.0",
  "info": {
    "title": "orders.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/orders": {
      "post": {
        "summary": "Gets order(JSON) and adds it to db",
        "operationId": "Orders_PostOrder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protosPostRes"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protosOrder"
            }
          }
        ],
        "tags": [
          "Orders"
        ]
      }
    },
    "/v1/orders/{id}": {
      "get": {
        "summary": "Gets an order given its ID",
        "operationId": "Orders_GetOrder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protosOrder"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Orders"
        ]
      }
    },
    "/v1/orders/{order.id}": {
      "delete": {
        "summary": "Deletes Order of given Order ID",
        "operationId": "Orders_DeleteOrder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protosPostRes"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "order.id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "order.discount",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "float"
          },
          {
            "name": "order.amount",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "float"
          },
          {
            "name": "order.payment_method",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order.rating",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "order.duration",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "order.cuisine",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order.time",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Orders"
        ]
      },
      "put": {
        "summary": "Gets order(JSON) and updates order in db",
        "operationId": "Orders_PutOrder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protosPostRes"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "order.id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protosOrder"
            }
          }
        ],
        "tags": [
          "Orders"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "protosOrder": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "discount": {
          "type": "number",
          "format": "float"
        },
        "amount": {
          "type": "number",
          "format": "float"
        },
        "payment_method": {
          "type": "string"
        },
        "rating": {
          "type": "integer",
          "format": "int32"
        },
        "duration": {
          "type": "integer",
          "format": "int32"
        },
        "cuisine": {
          "type": "string"
        },
        "time": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Order"
    },
    "protosPostRes": {
      "type": "object",
      "properties": {
        "response": {
          "type": "string"
        }
      },
      "title": "Response for POST"
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
