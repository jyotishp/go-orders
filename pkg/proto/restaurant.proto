syntax = "proto3";
package protos;
option go_package="pkg/proto";
import "google/api/annotations.proto";
import "utils.proto";


// Item
message Item {
  int32 id = 1;
  float amount = 2;
  float discount = 3;
  string cuisine = 4;
}

// Slice of Items
message ItemList {
  repeated Item items = 1;
}

// Restaurant Name
message NameReq {
  string name = 1;
}

// Restaurant
message Restaurant {
  int32 id = 1;
  string name = 2;
  string state = 3;
}

// List of Restaurants
message RestaurantList {
  repeated Restaurant restaurants = 1;
}

// Restaurant Request
message RestReq {
  Restaurant restaurant = 1;
}

// POST Item Request
message PostItemReq {
  int32 id = 1;
  Item item = 2;
}

// Item Request
message ItemReq {
  int32 id = 1;
  int32 item_id = 2;
  int32 min = 3;
  int32 max = 4;
}

service Restaurants {
  // Get a restaurant given its ID
  rpc GetRestaurant(GetReq) returns (Restaurant) {
    option (google.api.http) = {
      get: "/v1/restaurants/{id}"
    };
  }

  // Get all Restaurants of a given name
  rpc GetRestaurantName(NameReq) returns (RestaurantList) {
    option (google.api.http) = {
      get: "/v1/restaurants/{name}"
    };
  }

  // Gets a Restaurant and adds it to the db
  rpc PostRestaurant(RestReq) returns (PostRes) {
    option (google.api.http) = {
      post: "/v1/restaurants",
      body: "restaurant"
    };
  }

  // Gets a Restaurant ID and returns all of it's items
  rpc GetRestaurantAllItems(GetReq) returns (ItemList) {
    option (google.api.http) = {
      get: "/v1/restaurant/{id}/items"
    };
  }

  // Gets a min and max amount range and returns the list of items of given Restaurant ID that belong to this range
  rpc GetRestaurantRangeItems(ItemReq) returns (ItemList) {
    option (google.api.http) = {
      get: "/v1/restaurant/{id}/items/{min}"
    };
  }

  // Gets Restaurant ID and Item ID and returns respective item
  rpc GetRestaurantItem(ItemReq) returns (Item) {
    option (google.api.http) = {
      get: "/v1/restaurant/{id}/items/{item_id}"
    };
  }

  // Gets an Item(JSON) and adds it to Restaurant of given ID in the db
  rpc PostRestaurantItems(PostItemReq) returns (PostRes) {
    option (google.api.http) = {
      post: "/v1/restaurant/{id}/items",
      body: "item"
    };
  }

  // Gets an Item(JSON) and updates it to Restaurant of given ID in the db
  rpc PutRestaurantItems(PostItemReq) returns (PostRes) {
    option (google.api.http) = {
      put: "/v1/restaurant/{id}/items/{item.id}",
      body: "item"
      additional_bindings {
        put: "/v1/restaurant/{id}/items"
        body: "item"
      }
    };
  }

  // Deletes Item of given Item ID and Restaurant ID from db
  rpc DeleteRestaurantItems(PostItemReq) returns (PostRes) {
    option (google.api.http) = {
      delete: "/v1/restaurant/{id}/items/{item.id}"
    };
  }
}