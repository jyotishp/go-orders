syntax = "proto3";
package protos;
option go_package="pkg/proto";
import "google/api/annotations.proto";
import "customer.proto";
import "restaurant.proto";
import "utils.proto";


// Cuisines per state
message StateCuisines {
  // List of cuisines
  message CuisineList {
    repeated string cuisine = 1;
  }
  map<string, CuisineList> states = 1;
}

// Customers per cuisine
message CuisineCustomers {
  map<string, CustomerList> cuisines = 1;
}

// Cuisine
message Cuisine {
  string name = 1;
}

service Analysis {

  // Get the top performing restaurants by order count
  rpc TopRestaurants(GetReq) returns (RestaurantList) {
    option (google.api.http) = {
      get: "/v1/restaurants/top/{id}"
    };
  }

  // Get the worst performing restaurants by order count
  rpc WorstRestaurants(GetReq) returns (RestaurantList) {
    option (google.api.http) = {
      get: "/v1/restaurants/worst/{id}"
    };
  }

  // Get the most ordered cuisines for states
  rpc TopStateCuisines(GetReq) returns (StateCuisines) {
    option (google.api.http) = {
      get: "/v1/state-cuisines/top/{id}"
    };
  }

  // Get the least ordered cuisines for states
  rpc WorstStateCuisines(GetReq) returns (StateCuisines) {
    option (google.api.http) = {
      get: "/v1/state-cuisines/worst/{id}"
    };
  }

  // Get the customer base for cuisines
  rpc CuisineCustomerMap(Cuisine) returns (CuisineCustomers) {
    option (google.api.http) = {
      get: "/v1/cuisines-demographics/{name}"
    };
  }
}